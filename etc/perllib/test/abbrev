#!/usr/local/bin/p5
#
# A perl script to read in a file and return the abbrev of it.
#
  $name = $0;
  $name =~ s'.*/''; # remove path--like basename
  $usage = "usage:\n$name [-opt1] [-opt2] [-opt3]";

  use Filter::cpp ;
#define ASSOCIATIVE 1

  local(%abbrev)=();

  require("abbrev.pl");
  require("abbrev2.pl");

  while (<>) {
    chop $_;
    push(@array,$_);
    $length=( ($newlength=length($_)) > $length ) ? $newlength : $length;
  }

  &abbrev(*abbrev, @array);
  print "longest was $length long.\n";

#ifdef ASSOCIATIVE
  $pointer = &list_abbrevs(*abbrev);
  %uniques = %{$pointer};
# $points_to=ref($pointer);
# print "\$pointer points to a '$points_to'\n";
#else
  @uniques = &list_abbrevs(*abbrev);
#endif

  $length+=2;

  foreach $key ( sort keys %abbrev ) {
    printf "key: %-${length}s  value:%-${length}s\n", $key, $abbrev{$key};
  }
  print "now for my bit.\n";
#ifdef ASSOCIATIVE
  foreach $unique_key ( sort keys %uniques ) {
    printf "key: %-${length}s  value:%-${length}s\n",
      $unique_key, $uniques{$unique_key};
  }
#else
  foreach $unique ( @uniques ) {
    printf "uniques: %-${length}s\n", $unique;
  }
#endif
  print "my bit is done.\n";

  exit 0;

__END__

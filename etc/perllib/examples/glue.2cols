#!/usr/local/localadm/bin/perl
# script to glue blocks of lines horizontially.
# number of lines may be specified or the number coming through
# is used thusly:
# 1				# 1	#4
# 2				# 2	#5
# 3	would look line		# 3
# 4
# 5
#
#-----------------------------------------------------------------------------

#   ***   Define Default Strings, Values & Flags   ***
$name = $0;
$usage = "usage:\n$name [-d delimitor_string ] [-g number_lines_to_glue]";

$newline="\n"; 
$tab="\t"; 
$backspace="\010"; 
$formfeed="\014"; 

$delimitstring=$tab;
$numlines=0;

#-----------------------------------------------------------------------------

#   ***   Parse Command Line Argument(s)   ***
while ( @ARGV >= 1 ) {
  if    ( $ARGV[0] eq '-d' ) {
    $delimitstring = $ARGV[1];
    $delimitstring =~ s/([^\\]?)\\n/\1$newline/g;
    $delimitstring =~ s/([^\\]?)\\t/\1$tab/g;
    $delimitstring =~ s/([^\\]?)\\b/\1$backspace/g;
    $delimitstring =~ s/([^\\]?)\\f/\1$formfeed/g;
    $delimitstring =~ /([^\\]?)\\([0-7][0-7][0-7])/;
    $octal=&ascii($2);
    $delimitstring =~ s/(\\[0-7][0-7][0-7])/$octal/e;
    shift; shift; }
  elsif ( $ARGV[0] eq '-g' ) {
    $numlines = "$ARGV[1]";
    shift; shift; }
  elsif ( $ARGV[0] eq '-?' ) { do help($usage); }
  else { last; }
}  # end while

$i=0;
while (<>)  {
  chop;
  $line[++$i]=$_;
  if ( $numlines && ( $i >= $numlines ) ) { last; }
}
$numlines=$numlines?$numlines:$i;


$offset=int($numlines/2+0.5);
for ( $i=1; $i<=int($numlines/2); $i++) {
  print "$line[$i]$delimitstring$line[$i+$offset]$newline" ; }
if  ( $numlines%2 ) {
  print "$line[$offset]$newline" ; }

#   ***   EXIT GRACEFULLY   ***
exit 0;

####   SUBROUTINES   ####
sub help {
print "@_[0]\n";
print "Valid delimitor string expressions are:\n";
print "\\t for tabs, \\n for newlines, \\f for formfeeds, \\b for backspaces\n";
print "and \### for octal ascii codes\n";
exit 1;
}
sub ascii {
# returns character whos
# ascii value equals argument 0 as
#    octal or hex number if only one arg 
# OR    decimal   number if argument 2 = "d" or "D"
   if ($_[1]=="d") { return pack('C1',$_[0]); }
elsif ($_[1]=="D") { return pack('C1',$_[0]); }
return pack('C1',oct($_[0]));
}

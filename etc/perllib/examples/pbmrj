#!/usr/local/localadm/bin/perl
# script to rejoin edited pbm files generated by pbmsplit
# used for *.pbm files (portable bitmap)
# NOTE: each 'column' file need not be 70 characters wide.

$name =~ s'.*/''; $usage = "usage: $name position\n";

$file=$ARGV[0];

open(PBMFILE,">$file.pbm") ||
die("$name: cannot open $file file for output.\n");

# ** CONSTRUCT HEADER **
print PBMFILE "P1\n";

for ($num=1;$num<=10;$num++) { # open them to find number of files 
  if ( -r "$file$num" ) { open($num,"$file$num"); }
  else { $numfiles=$num-1; last; }
}
print "number of files is $numfiles\n";
for ($num=1;$num<=$numfiles;$num++) { # count lengths of first lines to get x
  $x+=length(<$num>)-1; # the minus one is for the newlines
  close($num);
}

$num=1;
$y=`wc -l $file$num`;

$x*=1; $y/=1;
print PBMFILE "$x $y\n";
print         "$x $y\n";

for ($num=1;$num<=$numfiles;$num++) {
  open($num,"$file$num");
}

#  ** MAIN LOOP **
for ($line=1;$line<=$y*2;$line++) {
  for ($num=1;$num<=$numfiles;$num++) {
    $theline=<$num>;
    $theline=~s/ /0/g;
    print PBMFILE $theline;
#   print PBMFILE <$num>; didn't work ??? seemed to invert nesting of for loops
#  if ( $line <= 2 ) { print "line: $line   file: $file.$num -->$theline:\n"; }
  }
}

for ($num=1;$num<=$numfiles;$num++) {
  close($num);
}

exit 0;

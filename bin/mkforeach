#!/usr/bin/env perl
#
# A perl-5 script to make a perl foreach construction
# out of a line containing an array name

use strict;
use warnings;

my $name = $0; $name =~ s'.*/''; # remove path--like basename
my $usage = "usage:\n$name";
my $debug=0;

while (<>) {
  my($indent,$symbol,$array_or_hash_name);
  if ( ($indent,$symbol,$array_or_hash_name) = ($_ =~ /^(\s*)([%@])(\S+)\s*$/) ) {
    my $var_name = $array_or_hash_name;
    $var_name =~ s/ies$/y/;
    $var_name =~ s/e?s$//;
    if ($symbol = /\%/) { $symbol="keys %"; }
    elsif ($symbol = /\@/) { $symbol="\@"; }
    if ( $debug ) {
      print "indent is '$indent'\n";
      print "array_or_hash_name is '$array_or_hash_name'\n";
      print "var_name           is '$var_name'\n";
      print "symbol             is '$symbol'\n";
    }
    printf "%sforeach my \$%s (%s%s) {\n%s}\n",
           $indent, $var_name, $symbol, $array_or_hash_name, $indent;
  } else {
    print;
  }
}

exit 0;

__END__
    @deer
    @cats
    %policies
    foreach $deer (@deer) {
    }
    foreach $cat (@cats) {
    }
    foreach $policy (keys %policies) {
    }

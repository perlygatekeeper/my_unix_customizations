#!/usr/bin/env perl
#
# A perl script that will filter lines adding or removing comment marks
# uncompleted as of Tue Oct 02, 2012
#
$name = $0; $name =~ s'.*/''; # remove path--like basename

exit 0;

sub parse_args {

  @args=('?','help');
  @help=('print this message','print this message');

  push(@args,'arg1','arg2','arg3','arg4');
  push(@help,'help for arg1',
             'help for arg2',
             'help for arg3',
             'help for arg4');

  grep(s/^([^-])/-\1/,@args);

  use Text::Abbrev;
  %abbrev = abbrev @args;


  while ( @ARGV >= 1 ) {
    if      ( ($abbrev{$ARGV[0]} eq '-help' )
           || ($abbrev{$ARGV[0]} eq '-?' ) ) {
      help($usage);
      shift(@ARGV);

    } elsif ( $abbrev{$ARGV[0]} eq '-arg1' ) {
      print "user specified arg1\n";
      $flag1=$true;
      shift(@ARGV);

    } elsif ( $abbrev{$ARGV[0]} eq '-arg2' ) {
      print "user specified arg2\n";
      shift(@ARGV);

    } elsif ( $abbrev{$ARGV[0]} eq '-arg3' ) {
      print "user specified arg3\n";
      shift(@ARGV);

    } elsif ( $abbrev{$ARGV[0]} eq '-arg4' ) {
      print "user specified arg4\n";
      print "with argument @ARGV[1]\n";
      $flag=$ARGV[1];
      shift(@ARGV); shift(@ARGV);

    } else {
#     warn("$name: Unknown option '$ARGV[0]'; disregarding...\n");
#     unshift(@ARGV);
      warn("$name: Unknown option '$ARGV[0]'; assuming title...\n");
      unshift(@ARGV,'-title');
    }
    print "$debug";
  }  # end while
}  # end parse_args

sub help {
  select(STDOUT); $|=1; $\=''; 
  print "@_[0]\n";
  if (@help) {
    for ($arg=$[; $arg<=$#args; $arg++) {
      printf "%-16s\t%s\n", $args[$arg], $help[$arg];
    }
  } else {
    for ($arg=$[; $arg<=$#args; $arg++) {
      print "$args[$arg]\t";
    }
    print "\n";
  }
  exit 1;
}

__END__

Compiled with help from: 
http://en.wikipedia.org/wiki/HTML_comment_tag#Comments
http://en.wikipedia.org/wiki/Comment_(computer_programming)#Comparison
http://en.wikipedia.org/wiki/Comparison_of_programming_languages_(syntax)#Comments

#			comments: Bash, Tcsh, perl, PHP, Ruby, Python, Cobra, Maple, Windows PowerShell

<#
.
.
#>			comments: Windows PowerShell

//			comments: C++, java, PHP

/*
.
.
 */			comments: ActionScript, AutoHotkey, C, C++, C#, D, Go, Java, JavaScript, Objective-C, PHP, PL/I, Scala (can be nested), SASS, SQL, Visual Prolog, CSS

=begin 
.
.
=end		comments: Ruby
=cut		comments: perl's POD

[%
.
.# (inside)	comments: Template::Toolkit
%]		

<!-- XXX >
.
.
<XXX -->*/	comments: HTML, XML, ColdFusion

--			comments: SQL, Haskel, Euphoria, Ada, AppleScript, Eiffel, Lua, VHDL, SGML
{-
.
.
 -}			comments: Haskel (multiline)

%			comments: TeX, LaTeX, Prolog, MATLAB,[7] Erlang, S-Lang, Visual Prolog
'			comments: Visual Basic, VBScript, RealBasic
;			comments: AutoHotkey, AutoIt, Lisp, Common Lisp, Clojure, Rebol, Scheme, many assemblers, Bind zone files
C			comments: Fortran IV, Fortran 77
!			comments: Fortran 90, Basic Plus, Inform
*			comments: Fortran 2000 (any character in 1st column)

"			comments: Vimscript (ie.  .vimrc files)
||			comments: Curl
\			comments: Forth

dnl			comments: delete to newline, m4 macro processor macro (sendmail.mc -> sendmail.cf)

rem			comments: remark, dos batch (.bat) files and BASIC CLASSIC
::			comments: Batch file
:			comments: Linux /etc/inittab file, Bourne and Tcsh Shell Scripts, from tcsh.1 (: Does nothing, successfully)
